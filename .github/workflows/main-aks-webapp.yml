name: build_deploy_aks
on:
  push:
    branches: [ "main" ]    
    paths: ["Webapi/**"]
  pull_request:

env:
  RESOURCE_GROUP_NAME: 'rg-se-aks-'
  LOCATION: 'westus'
  registry: 'aksreg'
  repository: 'githubworkflows' 
  cluster_name: 'aks-se-webapi'

permissions:
      id-token: write
      contents: read
jobs:
  vars:
    runs-on: ubuntu-22.04
    outputs:
      resource_group_name: ${{ env.RESOURCE_GROUP_NAME }}
      location: ${{ env.LOCATION }}
      registry: ${{ env.registry }}
      repository: ${{ env.repository }}
      cluster_name: ${{ env.cluster_name }}
    steps:
      - run: echo "Exposing env vars"
  build:
    needs: [vars]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code 
        uses: actions/checkout@v3

      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          client-id: ${{ secrets.AKS_CLIENT_ID }}
          client-secret: ${{ secrets.AKS_SECRET_ID }}          
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          

      - name: ACR build
        id: build-push-acr
        uses: azure/acr-build@v1
        with:
          service_principal: ${{ secrets.AKS_CLIENT_ID }}
          service_principal_password: ${{ secrets.AKS_SECRET_ID }}
          tenant: ${{ secrets.AZURE_TENANT_ID }}
          registry: '${{ needs.vars.outputs.registry }}'
          repository: '${{ needs.vars.outputs.repository }}'
          image:  azure-aks-webapi
          folder: Webapi
          branch: master
          tag: ${{ github.sha }}



      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.resource_group }}' 
          cluster-name: '${{ needs.vars.outputs.cluster_name }}'

      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
             azure-webapi-in-one-redis.yaml
          images: '${{ needs.vars.outputs.registry }}.azurecr.io/${{ needs.vars.outputs.repository }}/azure-vote-front:${{ github.sha }}'
          pull-images: false